{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TodoService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:3000';\n  }\n  getTodos() {\n    return this.http.get(this.baseUrl / api);\n  }\n  addTodo(todo) {\n    return this.http.post(this.baseUrl, todo);\n  }\n  updateTodo(todo) {\n    return this.http.put(`${this.baseUrl}/${todo._id}`, todo);\n  }\n  deleteTodo(todoId) {\n    return this.http.delete(`${this.baseUrl}/${todoId}`);\n  }\n}\n_class = TodoService;\n_class.ɵfac = function TodoService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["TodoService","constructor","http","baseUrl","getTodos","get","api","addTodo","todo","post","updateTodo","put","_id","deleteTodo","todoId","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ATHIRA\\Desktop\\TodoAPP_project\\Frontend\\src\\app\\todo.service.ts"],"sourcesContent":["\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoService {\n  private baseUrl = 'http://localhost:3000';\n\n  constructor(private http: HttpClient) {}\n\n  getTodos() {\n    return this.http.get(this.baseUrl/api);\n  }\n\n  addTodo(todo: any) {\n    return this.http.post(this.baseUrl, todo);\n  }\n\n  updateTodo(todo: any) {\n    return this.http.put(`${this.baseUrl}/${todo._id}`, todo);\n  }\n\n  deleteTodo(todoId: string) {\n    return this.http.delete(`${this.baseUrl}/${todoId}`);\n  }\n}\n"],"mappings":";;;AAOA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,uBAAuB;EAEF;EAEvCC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,IAAI,CAACF,OAAO,GAACG,GAAG,CAAC;EACxC;EAEAC,OAAOA,CAACC,IAAS;IACf,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,IAAI,CAACN,OAAO,EAAEK,IAAI,CAAC;EAC3C;EAEAE,UAAUA,CAACF,IAAS;IAClB,OAAO,IAAI,CAACN,IAAI,CAACS,GAAG,CAAC,GAAG,IAAI,CAACR,OAAO,IAAIK,IAAI,CAACI,GAAG,EAAE,EAAEJ,IAAI,CAAC;EAC3D;EAEAK,UAAUA,CAACC,MAAc;IACvB,OAAO,IAAI,CAACZ,IAAI,CAACa,MAAM,CAAC,GAAG,IAAI,CAACZ,OAAO,IAAIW,MAAM,EAAE,CAAC;EACtD;;SAnBWd,WAAW;;mBAAXA,MAAW,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAXnB,MAAW;EAAAoB,OAAA,EAAXpB,MAAW,CAAAqB,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}