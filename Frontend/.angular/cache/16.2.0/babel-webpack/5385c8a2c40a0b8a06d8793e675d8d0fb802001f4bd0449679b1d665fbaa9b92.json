{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../todo.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = function (a0) {\n  return {\n    \"completed-task\": a0\n  };\n};\nfunction TodoListComponent_li_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 7)(1, \"div\", 8)(2, \"input\", 9);\n    i0.ɵɵlistener(\"change\", function TodoListComponent_li_7_Template_input_change_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const todo_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.toggleComplete(todo_r1));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"label\", 10);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function TodoListComponent_li_7_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const todo_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.deleteTodo(todo_r1._id));\n    });\n    i0.ɵɵtext(6, \"Delete\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const todo_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"checked\", todo_r1.completed);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c0, todo_r1.completed));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(todo_r1.text);\n  }\n}\nexport let TodoListComponent = /*#__PURE__*/(() => {\n  var _class;\n  class TodoListComponent {\n    constructor(todoService) {\n      this.todoService = todoService;\n      this.todos = [];\n      this.newTodoText = '';\n    }\n    ngOnInit() {\n      this.loadTodos();\n    }\n    loadTodos() {\n      this.todoService.getTodos().subscribe(todos => {\n        this.todos = todos;\n      });\n    }\n    addTodo() {\n      if (this.newTodoText.trim() !== '') {\n        this.todoService.addTodo({\n          text: this.newTodoText,\n          completed: false\n        }).subscribe(() => {\n          this.loadTodos();\n          this.newTodoText = '';\n        });\n      }\n    }\n    deleteTodo(todoId) {\n      this.todoService.deleteTodo(todoId).subscribe(() => {\n        this.loadTodos();\n      });\n    }\n    toggleComplete(todo) {\n      const updatedTodo = {\n        ...todo,\n        completed: !todo.completed\n      };\n      this.todoService.updateTodo(updatedTodo).subscribe(() => {\n        this.loadTodos();\n      });\n    }\n  }\n  _class = TodoListComponent;\n  _class.ɵfac = function TodoListComponent_Factory(t) {\n    return new (t || _class)(i0.ɵɵdirectiveInject(i1.TodoService));\n  };\n  _class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"app-todo-list\"]],\n    decls: 8,\n    vars: 2,\n    consts: [[1, \"mt-4\"], [1, \"input-group\", \"mb-3\"], [\"type\", \"text\", \"placeholder\", \"Enter a new task\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"input-group-append\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", 3, \"click\"], [1, \"list-group\"], [\"class\", \"list-group-item d-flex justify-content-between align-items-center\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-group-item\", \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"form-check\"], [\"type\", \"checkbox\", 1, \"form-check-input\", 3, \"checked\", \"change\"], [1, \"form-check-label\", 3, \"ngClass\"], [1, \"btn\", \"btn-danger\", 3, \"click\"]],\n    template: function TodoListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function TodoListComponent_Template_input_ngModelChange_2_listener($event) {\n          return ctx.newTodoText = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function TodoListComponent_Template_button_click_4_listener() {\n          return ctx.addTodo();\n        });\n        i0.ɵɵtext(5, \"Add\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"ul\", 5);\n        i0.ɵɵtemplate(7, TodoListComponent_li_7_Template, 7, 5, \"li\", 6);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.newTodoText);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.todos);\n      }\n    },\n    dependencies: [i2.NgClass, i2.NgForOf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n    styles: [\"@import\\\"https://fonts.googleapis.com/css?family=Lato:wght@100;300;900&display=swap\\\";@import\\\"https://fonts.googleapis.com/css2?family=Raleway:wght@700&display=swap\\\";@import\\\"https://fonts.googleapis.com/css2?family=PT+Sans&display=swap\\\";.todo-container[_ngcontent-%COMP%]{font-family:Raleway,sans-serif!important;margin:50px 200px 0}  .mat-form-field-appearance-outline .mat-form-field-wrapper{margin:0!important}  .mat-form-field-infix{border-top:0}.add-details-field[_ngcontent-%COMP%]{width:100%}.add-details-field[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{font-family:PT Sans,sans-serif!important;padding-top:4px}  .todo-container .mat-tab-label{font-family:Raleway,sans-serif!important;font-weight:700;color:#000;width:50%}.todo-add-content[_ngcontent-%COMP%]{margin-top:10px;display:flex;justify-content:flex-end}.add-details[_ngcontent-%COMP%]{flex:1}.add-content-btn[_ngcontent-%COMP%]{margin-left:15px;float:right}.task-checkbox[_ngcontent-%COMP%]{align-self:center;font-family:PT Sans,sans-serif!important}  .todo-container .mat-tab-group.mat-primary .mat-ink-bar, .mat-tab-nav-bar.mat-primary[_ngcontent-%COMP%]   .mat-ink-bar[_ngcontent-%COMP%]{border-radius:50px 50px 0 0;height:4px;min-width:160px}  .mat-checkbox-checked{text-decoration:line-through}  .mat-checkbox-checked .mat-checkbox-background{background-color:#673ab6!important}.tasks-section[_ngcontent-%COMP%]{margin-top:16px}.list-tasks[_ngcontent-%COMP%]{display:flex;justify-content:space-between}.delete-btn[_ngcontent-%COMP%]{transform:scale(.8);color:gray}.delete-all-btn[_ngcontent-%COMP%]{background-color:#f18989;color:#e0e0e0;font-family:Raleway,sans-serif!important;align-content:flex-end}.delete-all-btn-logo[_ngcontent-%COMP%]{transform:scale(.6)}\"]\n  });\n  return TodoListComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}