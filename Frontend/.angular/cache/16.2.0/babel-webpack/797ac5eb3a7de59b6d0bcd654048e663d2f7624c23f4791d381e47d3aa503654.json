{"ast":null,"code":"// import { Component } from '@angular/core';\nimport { __decorate } from \"tslib\";\n// @Component({\n//   selector: 'app-todo-list',\n//   templateUrl: './todo-list.component.html',\n//   styleUrls: ['./todo-list.component.css']\n// })\n// export class TodoListComponent {\n// }\nimport { Component } from \"@angular/core\";\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nexport let TodoListComponent = class TodoListComponent {\n  constructor(auth, router, taskService, route, _snackBar) {\n    this.auth = auth;\n    this.router = router;\n    this.taskService = taskService;\n    this.route = route;\n    this._snackBar = _snackBar;\n    this.tasks = [];\n    this.form = new FormGroup({\n      addDetails: new FormControl(\"\", Validators.required)\n    });\n    this.data = [{\n      item: \"All\"\n    }, {\n      item: \"Active\"\n    }, {\n      item: \"Completed\"\n    }];\n  }\n  ngOnInit() {\n    this.getTasks();\n  }\n  getTasks() {\n    this.userId = this.getCurrentUserId();\n    this.taskService.getTasks(this.userId).subscribe(tasks => (this.tasks = tasks, tasks.sort((a, b) => a.completed > b.completed ? 1 : b.completed > a.completed ? -1 : 0)));\n  }\n  getCurrentUserId() {\n    const user = this.auth.getUserDetails();\n    return user._id;\n  }\n  resetAddDetailsForm() {\n    this.form.reset();\n    this.form.controls.addDetails.setErrors(null);\n  }\n  logCheckBoxClick(task) {\n    console.log(task);\n    this.taskService.setCompleted(this.userId, task).subscribe(() => task.completed = !task.completed);\n  }\n  showDeleteBtn(item) {\n    let completedItems = this.tasks.filter(task => task.completed);\n    return completedItems.length > 1 && item == \"Completed\";\n  }\n  deleteTask(task) {\n    console.log(task);\n    this.taskService.deleteTask(this.userId, task._id).subscribe(tasks => this.tasks = this.tasks.filter(t => t._id != task._id));\n    this._snackBar.open(\"Task Deleted\", \"Done\", {\n      duration: 1000,\n      horizontalPosition: \"center\",\n      verticalPosition: \"bottom\"\n    });\n  }\n  deleteAllCompleted() {\n    console.log(this.tasks);\n    this.tasks.forEach(element => {\n      if (element.completed) {\n        this.deleteTask(element);\n      }\n    });\n    this._snackBar.open(\"Deleted All Completed\", \"Done\", {\n      duration: 1000,\n      horizontalPosition: \"center\",\n      verticalPosition: \"bottom\"\n    });\n  }\n  submit() {\n    if (this.form.invalid) {\n      console.log(\"Invalid\");\n      return;\n    }\n    //  Create new task\n    this.taskService.createTasks(this.userId, this.form.value.addDetails).subscribe(tasks => this.getTasks());\n    this.resetAddDetailsForm();\n    this._snackBar.open(\"Task Added\", \"Done\", {\n      duration: 1000,\n      horizontalPosition: \"center\",\n      verticalPosition: \"bottom\"\n    });\n  }\n};\nTodoListComponent = __decorate([Component({\n  selector: 'app-todo-list',\n  templateUrl: './todo-list.component.html'\n  //   styleUrls: ['./todo-list.component.css']\n  // })\n})], TodoListComponent);","map":{"version":3,"names":["Component","FormGroup","FormControl","Validators","TodoListComponent","constructor","auth","router","taskService","route","_snackBar","tasks","form","addDetails","required","data","item","ngOnInit","getTasks","userId","getCurrentUserId","subscribe","sort","a","b","completed","user","getUserDetails","_id","resetAddDetailsForm","reset","controls","setErrors","logCheckBoxClick","task","console","log","setCompleted","showDeleteBtn","completedItems","filter","length","deleteTask","t","open","duration","horizontalPosition","verticalPosition","deleteAllCompleted","forEach","element","submit","invalid","createTasks","value","__decorate","selector","templateUrl"],"sources":["C:\\Users\\ATHIRA\\Desktop\\TodoAPP_project\\Frontend\\src\\app\\todo-list\\todo-list.component.ts"],"sourcesContent":["// import { Component } from '@angular/core';\n\n// @Component({\n//   selector: 'app-todo-list',\n//   templateUrl: './todo-list.component.html',\n//   styleUrls: ['./todo-list.component.css']\n// })\n// export class TodoListComponent {\n\n// }\nimport {\n  Input,\n  Component,\n  Output,\n  EventEmitter,\n  ViewEncapsulation\n} from \"@angular/core\";\n\nimport {\n  FormGroup,\n  FormControl,\n  ReactiveFormsModule,\n  Validators\n} from \"@angular/forms\";\n\nimport { NgModule } from \"@angular/core\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { AuthenticationService } from \"../../services/authentication/authentication.service\";\nimport Task from \"src/app/models/tasks\";\nimport { TaskService } from \"src/app/services/task.service\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\n@Component({\n  selector: 'app-todo-list',\n   templateUrl: './todo-list.component.html',\n  //   styleUrls: ['./todo-list.component.css']\n  // })\n\n})\nexport class TodoListComponent{\n  public userId;\n  tasks: Task[] = [];\n\n  constructor(\n    private auth: AuthenticationService,\n    private router: Router,\n    private taskService: TaskService,\n    private route: ActivatedRoute,\n    private _snackBar: MatSnackBar\n  ) {}\n\n  ngOnInit() {\n    this.getTasks();\n  }\n\n  getTasks() {\n    this.userId = this.getCurrentUserId();\n    this.taskService\n      .getTasks(this.userId)\n      .subscribe(\n        (tasks: Task[]) => (\n          (this.tasks = tasks),\n          tasks.sort((a, b) =>\n            a.completed > b.completed ? 1 : b.completed > a.completed ? -1 : 0\n          )\n        )\n      );\n  }\n\n  form: FormGroup = new FormGroup({\n    addDetails: new FormControl(\"\", Validators.required)\n  });\n\n  data = [\n    {\n      item: \"All\"\n    },\n    {\n      item: \"Active\"\n    },\n    {\n      item: \"Completed\"\n    }\n  ];\n\n  getCurrentUserId() {\n    const user = this.auth.getUserDetails();\n    return user._id;\n  }\n\n  resetAddDetailsForm() {\n    this.form.reset();\n    this.form.controls.addDetails.setErrors(null);\n  }\n\n  logCheckBoxClick(task) {\n    console.log(task);\n    this.taskService\n      .setCompleted(this.userId, task)\n      .subscribe(() => (task.completed = !task.completed));\n  }\n\n  showDeleteBtn(item) {\n    let completedItems = this.tasks.filter(task => task.completed);\n    return completedItems.length > 1 && item == \"Completed\";\n  }\n\n  deleteTask(task) {\n    console.log(task);\n\n    this.taskService\n      .deleteTask(this.userId, task._id)\n      .subscribe(\n        (tasks: Task) =>\n          (this.tasks = this.tasks.filter(t => t._id != task._id))\n      );\n\n    this._snackBar.open(\"Task Deleted\", \"Done\", {\n      duration: 1000,\n      horizontalPosition: \"center\",\n      verticalPosition: \"bottom\"\n    });\n  }\n\n  deleteAllCompleted() {\n    console.log(this.tasks);\n    this.tasks.forEach(element => {\n      if (element.completed) {\n        this.deleteTask(element);\n      }\n    });\n\n    this._snackBar.open(\"Deleted All Completed\", \"Done\", {\n      duration: 1000,\n      horizontalPosition: \"center\",\n      verticalPosition: \"bottom\"\n    });\n  }\n\n  submit() {\n    if (this.form.invalid) {\n      console.log(\"Invalid\");\n      return;\n    }\n\n    //  Create new task\n    this.taskService\n      .createTasks(this.userId, this.form.value.addDetails)\n      .subscribe((tasks: Task[]) => this.getTasks());\n\n    this.resetAddDetailsForm();\n\n    this._snackBar.open(\"Task Added\", \"Done\", {\n      duration: 1000,\n      horizontalPosition: \"center\",\n      verticalPosition: \"bottom\"\n    });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}